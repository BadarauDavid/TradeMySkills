"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var React = _interopRequireWildcard(require("react"));
var _AuthContext = _interopRequireDefault(require("./AuthContext"));
var _TokenObject = _interopRequireDefault(require("./TokenObject"));
var _reducers = require("./utils/reducers");
var _hooks = require("./utils/hooks");
var _errors = require("./errors");
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var AuthProvider = function AuthProvider(_ref) {
  var children = _ref.children,
    authType = _ref.authType,
    authName = _ref.authName,
    cookieDomain = _ref.cookieDomain,
    cookieSecure = _ref.cookieSecure,
    refresh = _ref.refresh;
  if (authType === 'cookie') {
    if (!cookieDomain) {
      throw new _errors.AuthKitError('authType \'cookie\' ' + 'requires \'cookieDomain\' and \'cookieSecure\' ' + 'props in AuthProvider');
    }
  }
  var refreshTokenName = refresh ? "".concat(authName, "_refresh") : null;
  var tokenObject = new _TokenObject.default(authName, authType, refreshTokenName, cookieDomain, cookieSecure);
  var _React$useReducer = React.useReducer(_reducers.authReducer, tokenObject.initialToken()),
    _React$useReducer2 = (0, _slicedToArray2.default)(_React$useReducer, 2),
    authState = _React$useReducer2[0],
    dispatch = _React$useReducer2[1];
  if (refresh) {
    (0, _hooks.useInterval)(function () {
      var _authState$auth, _authState$auth2, _authState$refresh, _authState$refresh2;
      refresh.refreshApiCallback({
        authToken: (_authState$auth = authState.auth) === null || _authState$auth === void 0 ? void 0 : _authState$auth.token,
        authTokenExpireAt: (_authState$auth2 = authState.auth) === null || _authState$auth2 === void 0 ? void 0 : _authState$auth2.expiresAt,
        authUserState: authState.userState,
        refreshToken: (_authState$refresh = authState.refresh) === null || _authState$refresh === void 0 ? void 0 : _authState$refresh.token,
        refreshTokenExpiresAt: (_authState$refresh2 = authState.refresh) === null || _authState$refresh2 === void 0 ? void 0 : _authState$refresh2.expiresAt
      }).then(function (result) {
        if (result.isSuccess) {
          dispatch((0, _reducers.doRefresh)(result));
        } else {}
      }).catch(function () {});
    }, authState.isSignIn ? refresh.interval : null);
  }
  React.useEffect(function () {
    tokenObject.syncTokens(authState);
  }, [authState]);
  return (0, _jsxRuntime.jsx)(_AuthContext.default.Provider, {
    value: {
      authState: authState,
      dispatch: dispatch
    },
    children: children
  });
};
AuthProvider.defaultProps = {
  cookieDomain: window.location.hostname,
  cookieSecure: window.location.protocol === 'https:'
};
var _default = exports.default = AuthProvider;