"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("react"));
var _reactRouterDom = require("react-router-dom");
var _AuthContext = _interopRequireDefault(require("./AuthContext"));
var _reducers = require("./utils/reducers");
var _errors = require("./errors");
var _utils = require("./utils/utils");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const RequireAuth = ({
  children,
  loginPath
}) => {
  const context = React.useContext(_AuthContext.default);
  if (context === null) {
    throw new _errors.AuthKitError('Auth Provider is missing. ' + 'Please add the AuthProvider before Router');
  }
  const location = (0, _reactRouterDom.useLocation)();
  if (!(0, _utils.isAuthenticated)(context.authState)) {
    context.dispatch((0, _reducers.doSignOut)());
    return <_reactRouterDom.Navigate to={loginPath} state={{
      from: location
    }} replace />;
  }
  return children;
};
var _default = exports.default = RequireAuth;